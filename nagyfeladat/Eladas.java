/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nagyfeladat;

import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Eladas extends javax.swing.JFrame {
Connection conn=null;
PreparedStatement pst=null;
ResultSet rs=null;
static String cikkszam=null;
static String termeknev=null;
static String keszlet=null;
static Integer szlasz=null;
static String Ar=null;
static Integer Fizetendo=null;
static Integer Osszeg=null;

    /**
     * Creates new form Eladas
     */
    public Eladas() {
        initComponents();
        jT_termek.getTableHeader().setFont(new Font("Arial", Font.BOLD, 18));
        jT_termek.setFont(new Font("Arial", Font.ITALIC, 14));
        jT_Szamla.getTableHeader().setFont(new Font("Arial", Font.BOLD, 18));
        jT_Szamla.setFont(new Font("Arial", Font.ITALIC, 14));
        DefaultTableModel dm = (DefaultTableModel)jT_Szamla.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTF_termek = new javax.swing.JTextField();
        jTF_menny = new javax.swing.JTextField();
        jL_termek = new javax.swing.JLabel();
        jL_Mennyiseg = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jT_termek = new javax.swing.JTable();
        jB_Fizetes = new javax.swing.JButton();
        jB_nyugta = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_Szamla = new javax.swing.JTable();
        jB_Vissza = new javax.swing.JButton();
        j_nyugta = new javax.swing.JCheckBox();
        jL_Fizetendo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTF_osszeg = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTF_termek.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTF_termek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTF_termekMouseClicked(evt);
            }
        });
        jTF_termek.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTF_termekKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTF_termekKeyReleased(evt);
            }
        });

        jTF_menny.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTF_menny.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTF_mennyKeyTyped(evt);
            }
        });

        jL_termek.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jL_termek.setText("Termék:");

        jL_Mennyiseg.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jL_Mennyiseg.setText("Mennyiség:");

        jT_termek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "T_cikkszam", "T_nev", "Keszlet", "Ar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jT_termek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jT_termekMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jT_termek);
        if (jT_termek.getColumnModel().getColumnCount() > 0) {
            jT_termek.getColumnModel().getColumn(0).setResizable(false);
            jT_termek.getColumnModel().getColumn(1).setResizable(false);
            jT_termek.getColumnModel().getColumn(2).setResizable(false);
            jT_termek.getColumnModel().getColumn(3).setResizable(false);
        }

        jB_Fizetes.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jB_Fizetes.setText("Fizetés");
        jB_Fizetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_FizetesActionPerformed(evt);
            }
        });

        jB_nyugta.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jB_nyugta.setText("Bevitel");
        jB_nyugta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_nyugtaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Számla");

        jT_Szamla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "szlaszam", "cikkszam", "termek", "mennyiseg", "Egysegar", "azon", "Fizetendo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jT_Szamla);
        if (jT_Szamla.getColumnModel().getColumnCount() > 0) {
            jT_Szamla.getColumnModel().getColumn(0).setResizable(false);
            jT_Szamla.getColumnModel().getColumn(1).setResizable(false);
            jT_Szamla.getColumnModel().getColumn(2).setResizable(false);
            jT_Szamla.getColumnModel().getColumn(3).setResizable(false);
            jT_Szamla.getColumnModel().getColumn(4).setResizable(false);
            jT_Szamla.getColumnModel().getColumn(5).setResizable(false);
            jT_Szamla.getColumnModel().getColumn(6).setResizable(false);
        }

        jB_Vissza.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jB_Vissza.setText("Vissza");
        jB_Vissza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_VisszaActionPerformed(evt);
            }
        });

        j_nyugta.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        j_nyugta.setSelected(true);
        j_nyugta.setText("Nyugta megnyitás");

        jL_Fizetendo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jL_Fizetendo.setText("Fizetendő:");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Ft");

        jTF_osszeg.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jL_termek, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jL_Mennyiseg))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTF_termek, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTF_menny, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(j_nyugta)
                                        .addGap(375, 375, 375))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Fizetes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_nyugta))
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jL_Fizetendo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jB_Vissza)))
                        .addGap(0, 90, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(721, 721, 721)
                .addComponent(jTF_osszeg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTF_termek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jL_termek, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTF_menny, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jL_Mennyiseg)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jB_nyugta)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jB_Fizetes, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jL_Fizetendo))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTF_osszeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(j_nyugta)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jB_Vissza)
                        .addGap(111, 111, 111))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTF_termekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTF_termekMouseClicked
        jTF_termek.setText("");
        jTF_menny.setText("");
        jB_nyugta.setEnabled(false);
    }//GEN-LAST:event_jTF_termekMouseClicked

    private void tblkeres()
    {
        DefaultTableModel model = (DefaultTableModel)jT_termek.getModel();
        int sorokszama=model.getRowCount();
        for (int i = sorokszama-1; i >=0; i--)
        {
            model.removeRow(i);
        }
        
        try
        {
            conn=EnSqlkapcsolatom.ConnectDB();
            String sql="SELECT T_cikkszam, T_nev, termek.Tcs_kod, Keszlet, T_ar "
                    + "FROM termek WHERE T_nev LIKE '"+jTF_termek.getText() +"%'";
            Statement sta=conn.createStatement();
            ResultSet rs=sta.executeQuery(sql);
            
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getInt("T_cikkszam"),rs.getString("T_nev"),rs.getInt("Keszlet"),rs.getInt("T_ar")});     
            }
            sta.close();
            conn.close();
        }
        catch (SQLException e)
        {
             JOptionPane.showMessageDialog(null, "Hiba a lekérdezésben!");
             //System.out.println(e);
        }
    }
    
    private void tblfresh()
    {
        DefaultTableModel model = (DefaultTableModel)jT_termek.getModel();
        int sorokszama=model.getRowCount();
        for (int i = sorokszama-1; i >=0; i--)
        {
            model.removeRow(i);
        }
        
        try
        {
            conn=EnSqlkapcsolatom.ConnectDB();
            String sql="SELECT T_cikkszam, T_nev, termek.Tcs_kod, Keszlet, T_ar "
                    + "FROM termek";
            Statement sta=conn.createStatement();
            ResultSet rs=sta.executeQuery(sql);
            
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getInt("T_cikkszam"),rs.getString("T_nev"),rs.getInt("Keszlet"),rs.getInt("T_ar")});     
            }
            sta.close();
            conn.close();
        }
        catch (SQLException e)
        {
             JOptionPane.showMessageDialog(null, "Hiba a lekérdezésben! "+e);
             //System.out.println(e);
        }  
    }
    
    private void eladfresh()
    {
        DefaultTableModel dm = (DefaultTableModel)jT_Szamla.getModel();
        while(dm.getRowCount() > 0)
        {
            dm.removeRow(0);
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tblfresh();
        jTF_osszeg.setText("0");
        jB_nyugta.setEnabled(false);
        eladfresh();
    }//GEN-LAST:event_formWindowOpened

    private void jTF_mennyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTF_mennyKeyTyped
        char c = evt.getKeyChar();
        if (jTF_menny.getText().equals(""))
        {
           if ( ((c < '1') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) 
           {
                evt.consume();  // ha nem szám, akkor ignorálja
           } 
        }
        else
        {
            if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) 
            {
                evt.consume();  // ha nem szám, akkor ignorálja
            } 
        }
    }//GEN-LAST:event_jTF_mennyKeyTyped

    private void jTF_termekKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTF_termekKeyPressed
        tblkeres();
    }//GEN-LAST:event_jTF_termekKeyPressed

    private void jTF_termekKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTF_termekKeyReleased
       tblkeres();
    }//GEN-LAST:event_jTF_termekKeyReleased

    private void jT_termekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jT_termekMouseClicked
        int sor=jT_termek.getSelectedRow();
        cikkszam=jT_termek.getModel().getValueAt(sor,0).toString();
        termeknev=jT_termek.getModel().getValueAt(sor,1).toString();
        keszlet=jT_termek.getModel().getValueAt(sor,2).toString();
        Ar=jT_termek.getModel().getValueAt(sor,3).toString();
        
        jTF_termek.setText(termeknev);
        jB_nyugta.setEnabled(true);      
    }//GEN-LAST:event_jT_termekMouseClicked

    private void jB_nyugtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_nyugtaActionPerformed
        conn=EnSqlkapcsolatom.ConnectDB();
        String sqlszla="SELECT MAX(szamlaszam) as szlasz from Forgalom";
        try
        {
            Statement sta = conn.createStatement();
            ResultSet rs= sta.executeQuery(sqlszla);        
            rs.next();
            szlasz=rs.getInt("szlasz")+1;
            if (szlasz.equals(0))
            {
                szlasz=1;
            }
            //System.out.println(szlasz);
        }
        catch(Exception e)
        {
                JOptionPane.showMessageDialog(null,e);
        }
        if (!jTF_menny.getText().equals(""))
        {
            DefaultTableModel dm = (DefaultTableModel)jT_Szamla.getModel();
            int i=0;
            Fizetendo=0;
            Integer  ujertek=0;
            boolean ok=true;
            if ((dm.getRowCount()>0))
            {
               while (ok && i<dm.getRowCount()) 
                {
                    if (dm.getValueAt(i, 2).equals(termeknev))
                    {
                        ujertek=Integer.parseInt(jT_Szamla.getModel().getValueAt(i, 3).toString())+Integer.parseInt(jTF_menny.getText());
                        Fizetendo=Integer.parseInt(Ar)*ujertek;
                        ok=false;
                    }
                    if (ok)
                    {
                        i++;
                    }
                }
                if (i>=dm.getRowCount())
                {
                    Fizetendo=Integer.parseInt(Ar)*Integer.parseInt(jTF_menny.getText());
                    dm.addRow(new Object[]{szlasz,cikkszam, termeknev, jTF_menny.getText(),Ar,Belepes.F_kod, Fizetendo});
                }
                else
                {
                    dm.setValueAt(ujertek, i, 3);
                    dm.setValueAt(Fizetendo, i, 6);
                }
            }
            else
            {
                ujertek=ujertek+Integer.parseInt(jTF_menny.getText());
                Fizetendo=Integer.parseInt(Ar)*ujertek;
                dm.addRow(new Object[]{szlasz,cikkszam, termeknev, jTF_menny.getText(),Ar,Belepes.F_kod,Fizetendo});
            }
            
            jTF_termek.setText("");
            jTF_menny.setText("");
            jB_nyugta.setEnabled(false);
            tblfresh();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Nem lehet üres a mennyiség!");
        }
        DefaultTableModel dm = (DefaultTableModel)jT_Szamla.getModel();
        int sorokszama=dm.getRowCount();
        Osszeg=0;
        for (int i = sorokszama-1; i >=0; i--)
        {
            Osszeg=Osszeg+Integer.parseInt(jT_Szamla.getModel().getValueAt(i,6).toString());
        }
        jTF_osszeg.setText(Integer.toString(Osszeg));
    }//GEN-LAST:event_jB_nyugtaActionPerformed

    private void jB_VisszaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_VisszaActionPerformed
        dispose();
    }//GEN-LAST:event_jB_VisszaActionPerformed

    private void jB_FizetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_FizetesActionPerformed
        int akt_termek_keszlet=0;
        int eladott_termek_keszlet=0;
        try
                { 
                    for (int i = 0; i < jT_Szamla.getRowCount(); i++) 
                    {   
                        conn=EnSqlkapcsolatom.ConnectDB();
                        String sqlin="INSERT INTO Forgalom (szamlaszam, T_cikkszam, F_mennyiseg, F_kod) VALUES "
                         +"("+szlasz+","
                         +jT_Szamla.getValueAt(i, 1)+","
                         +jT_Szamla.getValueAt(i, 3)+","
                         +jT_Szamla.getValueAt(i, 5)+")";
                        //System.out.println(sqlin);
                        Statement st=conn.createStatement();
                        st.executeUpdate(sqlin);         
                        //JOptionPane.showMessageDialog(null, "Insert megtörtént!");
                        st.close();
                        conn.close();
                    }
                }
                catch(Exception e)
                {
                    //System.out.println("Hiba"+e);
                    JOptionPane.showMessageDialog(null, "Sikertelen felvétel! "+e);
                }
        try
                { 
                    for (int i = 0; i < jT_Szamla.getRowCount(); i++) 
                    {   
                        conn=EnSqlkapcsolatom.ConnectDB();
                        String sqlmi="SELECT Keszlet FROM Termek where T_cikkszam="
                         +jT_Szamla.getValueAt(i, 1);
                        //System.out.println(sqlmi);
                        Statement stmi=conn.createStatement();
                        ResultSet rsmi=stmi.executeQuery(sqlmi);
                        rsmi.next();
                        akt_termek_keszlet=rsmi.getInt("Keszlet");
                        //System.out.println("akt"+akt_termek_keszlet);
                        eladott_termek_keszlet=Integer.parseInt(jT_Szamla.getModel().getValueAt(i,3).toString());
                        //System.out.println("ela"+eladott_termek_keszlet);
                        stmi.close();
                        conn.close();
                        try
                        {    
                            conn=EnSqlkapcsolatom.ConnectDB();
                            //System.out.println((akt_termek_keszlet-eladott_termek_keszlet));
                            String sqlup="UPDATE Termek SET Termek.Keszlet="+(akt_termek_keszlet-eladott_termek_keszlet)+""
                                    + " Where Termek.T_cikkszam="+jT_Szamla.getValueAt(i, 1);
                            //System.out.println(sqlup);
                            Statement stup=conn.createStatement();
                            stup.executeUpdate(sqlup);         
                            //JOptionPane.showMessageDialog(null, "Update megtörtént!");
                            stup.close();
                            conn.close();
                        }
                        catch(Exception e)
                        {
                            //System.out.println("Hiba"+e);
                            JOptionPane.showMessageDialog(null, "Sikertelen Frissítés! "+e);
                        }
                    }
                }
                catch(Exception e)
                {
                    //System.out.println("Hiba"+e);
                    JOptionPane.showMessageDialog(null, "Sikertelen lekérdezés!");
                }
                String s="C://Users/Admin/Documents/NetBeansProjects/NagyFeladat/src/nagyfeladat/Nyugta/"+Integer.toString(szlasz)+".txt";
                try
                {
                    System.setProperty("file.encoding", "UTF8");
                    
                    PrintWriter pw = new PrintWriter(s); 
                    pw.println("Számlaszám: "+jT_Szamla.getModel().getValueAt(0,0).toString());
                    pw.println("Cikkszam \t\tTermek \t\tMennyiség \t\tEgységár \t\tFizetendő");
                    String kiir="";
                    DefaultTableModel dm = (DefaultTableModel)jT_Szamla.getModel();
                    for (int i = 0; i < jT_Szamla.getRowCount(); i++)
                    {
                        kiir=jT_Szamla.getModel().getValueAt(i,1).toString()+" \t\t"+jT_Szamla.getModel().getValueAt(i,2).toString()+" \t\t"+jT_Szamla.getModel().getValueAt(i,3).toString()+" \t\t"+jT_Szamla.getModel().getValueAt(i,4).toString()+" \t\t"+jT_Szamla.getModel().getValueAt(i,6).toString();
                        pw.println(kiir);
                    }
                    pw.println("Összesen: "+jTF_osszeg.getText());
                    pw.close();
                    //System. out.println("Az adatokat kiírtam!");
                }
                catch(Exception hiba)
                {
                    //System. out.println("Nincs meg a fájl!" + hiba);
                    JOptionPane.showMessageDialog(null, "Sikertelen lekérdezés! "+hiba);
                }
                if (j_nyugta.isSelected()==true)
                {
                    try
                    {
                        ProcessBuilder job = new ProcessBuilder("notepad.exe",s);
                         job.start();
                    }
                    catch(Exception hiba)
                    {
                        JOptionPane.showMessageDialog(null, "Sikertelen megnyitás! "+hiba);
                    }
                }
                tblfresh();
                jTF_osszeg.setText("0");
                DefaultTableModel dm = (DefaultTableModel)jT_Szamla.getModel();
                int sorokszama=dm.getRowCount();
                for (int i = sorokszama-1; i >=0; i--)
                {
                    dm.removeRow(i);
                }
    }//GEN-LAST:event_jB_FizetesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Eladas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Eladas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Eladas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Eladas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Eladas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Fizetes;
    private javax.swing.JButton jB_Vissza;
    private javax.swing.JButton jB_nyugta;
    private javax.swing.JLabel jL_Fizetendo;
    private javax.swing.JLabel jL_Mennyiseg;
    private javax.swing.JLabel jL_termek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF_menny;
    private javax.swing.JTextField jTF_osszeg;
    private javax.swing.JTextField jTF_termek;
    private javax.swing.JTable jT_Szamla;
    private javax.swing.JTable jT_termek;
    private javax.swing.JCheckBox j_nyugta;
    // End of variables declaration//GEN-END:variables
}
